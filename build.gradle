plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.amin'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter:3.5.4'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.5.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.5.4'
    implementation 'org.postgresql:postgresql:42.7.7'
    implementation("jakarta.validation:jakarta.validation-api:3.0.2")
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
    implementation 'io.github.cdimascio:dotenv-java:3.2.0'
    compileOnly 'org.projectlombok:lombok:1.18.38'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.5.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.12.2'
    testImplementation(platform("org.junit:junit-bom:5.11.0"))
    testImplementation("org.junit.jupiter:junit-jupiter:5.12.2")
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Amapstruct.defaultComponentModel=spring"
}

tasks.named('test') {
    useJUnitPlatform()
}
bootJar {
    archiveFileName = 'task-management.jar'
}

